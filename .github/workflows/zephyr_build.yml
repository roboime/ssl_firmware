name: Zephyr Build
on:
  push:
    branches: [ main, dev ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build gperf ccache dfu-util device-tree-compiler wget python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file make gcc gcc-multilib g++-multilib libsdl2-dev
          
      - name: Install Zephyr SDK
        run: |
          wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.1/zephyr-sdk-0.16.1_linux-x86_64.tar.gz
          tar xvf zephyr-sdk-0.16.1_linux-x86_64.tar.gz
          cd zephyr-sdk-0.16.1
          ./setup.sh -t all -h -c
          echo "ZEPHYR_TOOLCHAIN_VARIANT=zephyr" >> $GITHUB_ENV
          echo "ZEPHYR_SDK_INSTALL_DIR=$PWD" >> $GITHUB_ENV
          
      - name: Install West
        run: |
          pip3 install west
          west init -m https://github.com/roboime/ssl_firmware.git
          west update
          west zephyr-export
          pip3 install -r zephyr/scripts/requirements.txt
          
      - name: Build all projects
        run: |
          for app in ssl_firmware/applications/*; do
            if [ -d "$app" ]; then
              app_name=$(basename "$app")
              echo "Building $app_name"
              west build -p auto -b nucleo_h723zg "$app"
            fi
          done
          
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: firmware
          path: |
            build/*/zephyr/zephyr.*